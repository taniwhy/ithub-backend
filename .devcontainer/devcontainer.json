// If you want to run as a non-root user in the container, see .devcontainer/docker-compose.yml.
{
	"name": "Existing Docker Compose (Extend)",
	// Update the 'dockerComposeFile' list if you have more compose files or use different names.
	// The .devcontainer/docker-compose.yml file contains any overrides you need/want to make.
	"dockerComposeFile": [
		"../docker-compose.yml",
		"docker-compose.yml"
	],
	// The 'service' property is the name of the service for the container that VS Code should
	// use. Update this value and .devcontainer/docker-compose.yml to the real service name.
	"service": "app",
	// The optional 'workspaceFolder' property is the path VS Code should open by default when
	// connected. This is typically a file mount in .devcontainer/docker-compose.yml
	"workspaceFolder": "/workspace",
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": null
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.go",
		"coenraads.bracket-pair-colorizer-2",
		"ms-azuretools.vscode-docker",
		"mikestead.dotenv",
		"golang.go",
		"eamodio.gitlens",
		"oderwat.indent-rainbow",
		"ms-ceintl.vscode-language-pack-ja",
		"pkief.material-icon-theme",
		"ionutvmi.path-autocomplete",
		"christian-kohler.path-intellisense",
		"ms-vscode-remote.remote-containers",
		"adpyke.vscode-sql-formatter",
		"shardulm94.trailing-spaces"
	],
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		8000
	],
	// Uncomment the next line if you want start specific services in your Docker Compose config.
	// "runServices": [],
	// Uncomment the next line if you want to keep your containers running after VS Code shuts down.
	// "shutdownAction": "none",
	// Uncomment the next line to run commands after the container is created - for example installing curl.
	// "postCreateCommand": "apt-get update && apt-get install -y curl",
	// Uncomment to connect as a non-root user if you've added one. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
	"mounts": [
		"source=${localEnv:HOME}/.ssh/,target=/root/.ssh/,type=bind,consistency=cached",
		"source=${localEnv:HOME}/.gitconfig,target=/root/.gitconfig,type=bind,consistency=cached",
		"source=${localWorkspaceFolder}/.devcontainer/.local/share/fish/fish_history,target=/root/.local/share/fish/fish_history,type=bind,consistency=cached",
		"source=${localEnv:HOME}/.config/gcloud/,target=/root/.config/gcloud/,type=bind,consistency=cached",
		"source=${localEnv:HOME}/.kube/,target=/root/.kube/,type=bind,consistency=cached",
	],
}